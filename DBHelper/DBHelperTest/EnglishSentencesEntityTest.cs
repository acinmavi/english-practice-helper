/*
	This code was generated by SQL Compact Code Generator version 1.3.0.7

	SQL Compact Code Generator was written by Christian Resma Helle (http://sqlcecodegen.codeplex.com)
	and is under the GNU General Public License version 2 (GPLv2)

	Generated: 07/13/2013 19:59:21
*/



namespace DBHelperTest
{
    using DBHelper;
    using Microsoft.VisualStudio.TestTools.UnitTesting;

	[TestClass]
	public class EnglishSentencesEntityTest
	{
		[TestMethod]
		public void IDTest()
		{
			var value = new System.Int32();
			var target = new EnglishSentences();
			target.ID = value;

			Assert.AreEqual(value, target.ID);
		}

		[TestMethod]
		public void IDNullTest()
		{
			var target = new EnglishSentences();
			target.ID = null;

			Assert.AreEqual(null, target.ID);
		}

		[TestMethod]
		public void ContentTest()
		{
			var value = string.Empty;
			var target = new EnglishSentences();
			target.Content = value;

			Assert.AreEqual(value, target.Content);
		}

		[TestMethod]
		public void ContentNullTest()
		{
			var target = new EnglishSentences();
			target.Content = null;

			Assert.AreEqual(null, target.Content);
		}

		[TestMethod]
		public void ContentMaxLengthTest()
		{
			var value = RandomGenerator.GenerateString(100);
			var target = new EnglishSentences();
			target.Content = value;

			Assert.AreEqual(value, target.Content);
		}

		[TestMethod]
		public void ContentMaxLengthArgumentExceptionTest()
		{
			try
			{
				var value = RandomGenerator.GenerateString(101);
				var target = new EnglishSentences();
				target.Content = value;
				Assert.IsTrue(false, "ArgumentException expected");
			}
			catch (System.ArgumentException) { }
			catch (System.Exception)
			{
				Assert.IsTrue(false, "ArgumentException expected");
			}
		}

		[TestMethod]
		public void LevelTest()
		{
			var value = new System.Int32();
			var target = new EnglishSentences();
			target.Level = value;

			Assert.AreEqual(value, target.Level);
		}

		[TestMethod]
		public void LevelNullTest()
		{
			var target = new EnglishSentences();
			target.Level = null;

			Assert.AreEqual(null, target.Level);
		}

	}
}


